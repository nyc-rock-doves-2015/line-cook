// Generated by CoffeeScript 1.6.3
(function() {
  $(document).on("ready", function() {
    return $(document).on("deviceready", function() {
      var $heard, $resume_recognition, $speak, $start_listening, $status, $stop_listening, $suspend_recognition, $words_to_say, Ears, updateHeard, updateStatus;
      $(".event.listening").hide();
      $(".event.received").show();
      $status = $("#status");
      updateStatus = function(new_status) {
        var previous_statuses;
        previous_statuses = $status.html();
        return $status.html(new_status + "\n" + previous_statuses);
      };
      $(document).on("openEarsError", function(evt) {
        updateStatus("openEarsError");
        return updateStatus(evt.originalEvent.detail);
      });
      updateStatus("Starting App...");
      Ears = cordova.plugins.OpenEars;
      Ears.startAudioSession();
      $(document).on("startAudioSession", function(evt) {
        return updateStatus("Audio Session Started...");
      });
      window.languages = {};
      languages["commands"] = {};
      languages["commands"].name = "commands";
      languages["commands"].csv = "START,NEXT,REPEAT";
      languages["commands"].paths = {};
      Ears.generateLanguageModel(languages["commands"].name, languages["commands"].csv);
      $(document).on("generateLanguageModel", function(evt) {
        languages["commands"].paths = evt.originalEvent.detail;
        return updateStatus("generate Language Model");
      });

      $start_listening = $("#start_listening");
      $stop_listening = $("#stop_listening");
      $suspend_recognition = $("#suspend_recognition");
      $resume_recognition = $("#resume_recognition");
      $resume_recognition.hide();
      $start_listening.hide();


      $stop_listening.on("click", function(e) {
        Ears.stopListening();
        $start_listening.show();
        $stop_listening.hide();
        $resume_recognition.hide();
        return $suspend_recognition.hide();
      });
      $start_listening.on("click", function(e) {
        Ears.resumeListening();
        $start_listening.hide();
        $stop_listening.show();
        $resume_recognition.hide();
        return $suspend_recognition.show();
      });
      $suspend_recognition.on("click", function(e) {
        Ears.suspendRecognition();
        $resume_recognition.show();
        return $suspend_recognition.hide();
      });
      $resume_recognition.on("click", function(e) {
        Ears.resumeRecognition();
        $resume_recognition.hide();
        return $suspend_recognition.show();
      });
      $heard = $("#heard");

      updateHeard = function(detail) {
        $heard.html(detail.hypothesis);
        Ears.say(detail.hypothesis); 
      };
      $(document).on("receivedHypothesis", function(evt) {
        var detail;
        updateStatus("received Hypothesis");
        detail = evt.originalEvent.detail;
        return processHeard(detail);
      });

      $speak = $("#speak");
      $words_to_say = $("#words_to_say");
      $speak.on("click", function(e) {
        return ;
      });
      $(document).on("stopListening", function(evt) {
        return updateStatus("stop Listening");
      });
      $(document).on("stoppedListening", function(evt) {
        return updateStatus("stopped Listening");
      });
      $(document).on("resumeListening", function(evt) {
        return updateStatus("resume Listening");
      });
      $(document).on("resumedListening", function(evt) {
        return updateStatus("resumed Listening");
      });
      $(document).on("suspendRecognition", function(evt) {
        return updateStatus("suspend Recognition");
      });
      $(document).on("suspendedeRcognition", function(evt) {
        return updateStatus("suspended Recognition");
      });
      $(document).on("resumeRecognition", function(evt) {
        return updateStatus("resume Recognition");
      });
      $(document).on("resumedRecognition", function(evt) {
        return updateStatus("resumed Recognition");
      });
      $(document).on("startListeningWithLanguageModelAtPath", function(evt) {
        var detail;
        updateStatus("start Listening With Language Model At Path");
        detail = evt.originalEvent.detail;
        return updateStatus(detail);
      });
      $(document).on("changeLanguageModelToFile", function(evt) {
        var detail;
        updateStatus("change Language Model To File");
        detail = evt.originalEvent.detail;
        return updateStatus(detail);
      });
      $(document).on("changedLanguageModelToFile", function(evt) {
        var detail;
        updateStatus("changed Language Model To File");
        detail = evt.originalEvent.detail;
        return updateStatus(detail);
      });
      $(document).on("startedCalibration", function(evt) {
        return updateStatus("started Calibration");
      });
      $(document).on("finishedCalibration", function(evt) {
        return updateStatus("finished Calibration");
      });
      $(document).on("continuousSetupDidFail", function(evt) {
        return updateStatus("continuous Setup Did Fail");
      });
      $(document).on("testRecognitionCompleted", function(evt) {
        return updateStatus("test Recognition Completed");
      });
      $(document).on("say", function(evt) {
        var detail;
        updateStatus("say");
        detail = evt.originalEvent.detail;
        return updateStatus(detail);
      });
      $(document).on("startedSpeaking", function(evt) {
        return updateStatus("started Speaking");
      });
      $(document).on("finishedSpeaking", function(evt) {
        return updateStatus("finished Speaking");
      });
      $(document).on("detectedSpeech", function(evt) {
        return updateStatus("detected Speech");
      });
      $(document).on("finishedDetectingSpeech", function(evt) {
        return updateStatus("finished Detecting Speech");
      });
      $(document).on("audioSessionInterruptionDidBegin", function(evt) {
        return updateStatus("audio Session Interruption Did Begin");
      });
      $(document).on("audioSessionInterruptionDidEnd", function(evt) {
        return updateStatus("audio Session Interruption Did End");
      });
      $(document).on("audioInputDidBecomeUnavailable", function(evt) {
        return updateStatus("audio Input Did Become Unavailable");
      });
      $(document).on("audioInputDidBecomeAvailable", function(evt) {
        return updateStatus("audio Input Did Become Available");
      });
      return $(document).on("audioRouteDidChangeToRoute", function(evt) {
        return updateStatus("audio Route Did Change To Route");
      });
    });
  });

}).call(this);
